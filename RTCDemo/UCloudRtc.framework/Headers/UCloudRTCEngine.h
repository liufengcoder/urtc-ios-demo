//
//  UCloudRTCEngine.h
//  UCloudRTC
//
//  Created by Tony on 2019/4/18.
//  Copyright © 2019年 ucoloud. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "UCloudRTCConfig.h"
/**
 The UCloudRTCEngine class is the entry point of the UCloudRTC SDK providing API methods for apps to easily start voice and video communication.
 */
@class UCloudRTCEngine;
@class RTCMediaStream;
@class UCloudRTCConfig;
/** The UCloudRTCEngineDelegate protocol enables callbacks to your app.
 The SDK uses delegate callbacks in the UCloudRTCEngineDelegate protocol to report runtime events to the app.
 */
@protocol UCloudRTCEngineDelegate <NSObject>
@optional

#pragma mark UCloudRTCEngineDelegate Methods
/** Reports an error during SDK runtime .
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param errorMsg  error message .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine handleError:(NSDictionary *_Nullable)errorMsg;

/** Return the local media stream .
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param stream  local media stream .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine setLocalStream:(RTCMediaStream *_Nullable)stream;

/** Return the remote media stream .
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param stream  remote media stream .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine addRemoteStream:(RTCMediaStream *_Nonnull)stream connectionID:(NSString *_Nonnull)connectionID;

/** Remove the connection with connection id.
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param connectionID  connection id .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine removeConnection:(NSString *_Nonnull)connectionID;

/** Reports the result of publish or unpublish during SDK runtime .
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param response  response  .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine publishResponse:(NSDictionary *_Nullable)response;

/** Reports the result of subscribe or unsubscribe during SDK runtime .
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param response  response  .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine subscribeResponse:(NSDictionary *_Nullable)response;

/** Reports the changing of remote streams .
 
 *@param UCloudRTCEngine UCloudRTCEngine object.
 *@param streams remote streams .
 */
- (void)UCloudRTCEngine:(UCloudRTCEngine *_Nonnull)UCloudRTCEngine remoteStreamsChange:(NSMutableArray *_Nullable)streams;

@end

@interface UCloudRTCEngine : NSObject


@property (nonatomic, weak) id <UCloudRTCEngineDelegate>  delegate;


@property (nonatomic, strong) UCloudRTCConfig * _Nonnull rctConfig;

/** Initializes the UCloudRTCEngine object.
 
 Call this method to initialize the service before using UCloudRTCEngine.
 @warning One UCloudRTCEngine can use only one App ID.
 @return An object of the UCloudRTCEngine class.
 */
+ (instancetype _Nonnull )shareEngine;

/** Set auto  publish .
 
 *@param isAuto  auto to publish or not. (default is YES)
 */
- (void)setAutoPublish:(BOOL)isAuto;

/** Set auto  subscribe .
 
 *@param isAuto  auto to subscribe or not. (default is YES)
 */
- (void)setAutoSubscribe:(BOOL)isAuto;

/** Set only audio mode .
 
 *@param isOnly  there is only audio. (default is NO).
 */
- (void)setAudioOnlyMode:(BOOL)isOnly;


/** Allows a user to join a channel affter verified the token.
 *@param config UCloudRTCConfig.
 *@param completionHandler completionHandler.
 *@warning After verifying token, it will automatically connect to the urtc server and join the room.
 */
- (void)joinRoom:(UCloudRTCConfig *_Nonnull)config completionHandler:(void (^_Nullable)( NSDictionary * _Nullable response, NSError * _Nullable error))completionHandler;


/** leaveRoom the UCloudRTCEngine instance and releases all resources used by the UCloudRTC SDK.
 
 This method is useful for apps that occasionally make voice or video calls, to free up resources for other operations when not making calls.
 
 Once the app calls this method to release the created UCloudRTCEngine instance, no other methods in the SDK can be used and no callbacks can occur.
 The user will also exit the room.
 To start communications again, initialize [UCloudRTCEngine shareEngine] to establish a new UCloudRTCEngine instance.
 
 **Note:**
 
 - Call this method in the subthread.
 - This method call is synchronous. The result returns after the UCloudRTCEngine object resources are released. The app should not call this interface in the callback generated by the SDK. Otherwise, the SDK must wait for the callback to return before it can reclaim the related object resources, causing a deadlock.
 */
- (void)leaveRoom;

/** Publish the local media stream.
 
 *@param streamInfo some info about the local stream.
 *@warning this method only can use when UCloudRTCEngine auto publish is NO.
 */
- (void)publish:(UCloudPublishStreamInfo *_Nonnull)streamInfo;
- (void)unPublish;

/** Subscribe the remote media stream.
 
 *@param info some info about the remote stream.
 *@warning this method only can use when UCloudRTCEngine auto subscribe is NO.
 */
- (void)subscribeMethod:(UCloudSubscribeStreamInfo *_Nonnull)info;
- (void)unSubscribeMethod:(UCloudSubscribeStreamInfo *_Nonnull)info;


/** Method used to  mute an user's audio stream.
 
 */
- (void)muteAudio;

/** Method used to  unmute an user's audio stream.
 
 */
- (void)unMuteAudio;

/** Method used to  mute an user's video stream.
 
 */
- (void)muteVideo;

/** Method used to  unmute an user's video stream.
 
 */
- (void)unMuteVideo;

/** Method used to  switch phone's camrea to back.
 
 */
- (void)switchCamreaToBack;

/** Method used to  switch phone's camrea to front.
 
 */
-(void)switchCamreaToFront;


#pragma mark - URTC Log
/** Set whether to print log information for the SDK, Default NO(do not print log).
 *  Set to YES, the SDK will output log information for debugging reference.
 *  Release the product back to NO unless required.
 */
- (void)setLogEnabled:(BOOL)vaule;


+ (BOOL)logEnable;

/** Method used to get the version of SDK.
 
 */
+ (NSString *_Nullable)getSdkVersion;

@end
